<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>496</x>
      <y>216</y>
      <w>208</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>proxygen::Acceptor
--
- socketOptions_
- sslCtxManager_
- downstreamConnectionManager_
- connectionCounter_
--
+ addConnection()
+ setSSLCacheProvider(cacheProvider&amp;)
+ setFizzCertManager(fizzCertManager*)
+ init(socket, eventBase, stats)
+ onNewConnection()
# onConnectionDrained()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>576</x>
      <y>128</y>
      <w>24</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>488</x>
      <y>56</y>
      <w>208</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>AsyncServerSocket::AcceptCallback
--
--
+ connectionAccepted(in fd, in clientAddr) = 0
+ acceptError(in exception&amp;) = 0
+ acceptStarted()
+ acceptStopped()
bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>232</x>
      <y>72</y>
      <w>208</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>ConnectionManager::Callback
--
--
+ onEmpty() = 0;
+ onConnectionRemoved() = 0;
+ onConnectionAdded() = 0;
bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>432</x>
      <y>128</y>
      <w>168</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;190.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>728</x>
      <y>56</y>
      <w>192</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>AsyncUDPServerSocket::Callback
--
--
+ onListenStarted() = 0
+ onListenStopped()
+ onListenPaused()
+ onListenResumed()
+ onDataAvailable(socket, addr, buf, bool)
bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>576</x>
      <y>144</y>
      <w>168</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>190.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>520</x>
      <y>424</y>
      <w>152</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>proxygen::HTTPAcceptor
--
- HHWheelTimerInstance_
- acceptorConfig_
--
+ isInternal()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>592</x>
      <y>360</y>
      <w>24</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>488</x>
      <y>544</y>
      <w>296</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>proxygen::HTTPSessionAcceptor
--
- defaultErrorPage_
- codecFactory_ptr_
- simpleController_
- sessionInfoCallback_
- address_
--
+ DefaultErrorPage(HTTPErrorPage*)
+ codecFactory()
+ newHandler(HTTPTransaction*, HTTPMessage*) = 0
+ controller()
+ onNewConnection() override
+ makeNewAsyncSocket(eventBase*, fd)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>584</x>
      <y>488</y>
      <w>24</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>528</x>
      <y>768</y>
      <w>184</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>proxygen::HTTPServerAcceptor
--
--
- newHandler()
- onNewConnection()
- onConnectionDrained()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>608</x>
      <y>712</y>
      <w>24</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>888</x>
      <y>352</y>
      <w>288</w>
      <h>232</h>
    </coordinates>
    <panel_attributes>proxygen::HTTPSessionBase::InfoCallback
--
# peerAddr_
# localAddr_
# HTTPSessionStats* sessionStats_{nullptr};
# InfoCallback* infoCallback_{nullptr};
# wangle::TransportInfo transportInfo_;
# HTTPCodecFilterChain codec_;
--
+ onCreate(HTTPSessionBase&amp;)
+ onTransportReady(HTTPSessionBase&amp;)
+ onConnectionError(HTTPSessionBase&amp;)
+ onFullHandShakeCompletion(HSB&amp;)
+ onIngressError(HSB&amp;, proxtgenError)
+ onInGressEOF()
+ onRead(HSB&amp;, size)
+ onWrite(HSB&amp;, size)
+ onRequestBegin(HSB&amp;)
bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>776</x>
      <y>448</y>
      <w>128</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>140.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1216</x>
      <y>0</y>
      <w>160</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>proxygen::HTTPServer
--
- options_
- mainEventBase_
- sessionInfoCallback_
- addresses_
- bootStraps_
--
+ start()
+ stop()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1416</x>
      <y>160</y>
      <w>184</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>proxygen::HTTPServerOptions
--
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1952</x>
      <y>304</y>
      <w>192</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>proxygen::EchoHandlerFactory
--
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1720</x>
      <y>168</y>
      <w>192</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>proxygen::RequestHandlerFactory
--
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1472</x>
      <y>304</y>
      <w>176</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>proxygen::ProxyHandlerFactory
--
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1688</x>
      <y>304</y>
      <w>216</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>proxygen::PushRequestHandlerFactory
--
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1544</x>
      <y>224</y>
      <w>192</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>220.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1768</x>
      <y>224</y>
      <w>48</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>40.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1904</x>
      <y>224</y>
      <w>160</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;180.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1392</x>
      <y>504</y>
      <w>200</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>proxygen::HTTPCodecFactory
--
--
+ getCodec(protocol, direction, isTLS)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1232</x>
      <y>304</y>
      <w>152</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>proxygen::IPConfig
--
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1256</x>
      <y>632</y>
      <w>224</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>proxygen::DefaultHTTPCodecFactory
--
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1360</x>
      <y>560</y>
      <w>120</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>130.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1504</x>
      <y>632</y>
      <w>240</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>proxygen::HTTPDefaultSessionCodecFactory
--
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1504</x>
      <y>560</y>
      <w>200</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;230.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1168</x>
      <y>112</y>
      <w>64</w>
      <h>256</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>60.0;10.0;10.0;300.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1288</x>
      <y>112</y>
      <w>40</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;30.0;240.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1368</x>
      <y>112</y>
      <w>64</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1376</x>
      <y>360</y>
      <w>32</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;20.0;210.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1592</x>
      <y>184</y>
      <w>144</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
ref</panel_attributes>
    <additional_attributes>10.0;20.0;160.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>616</x>
      <y>712</y>
      <w>24</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>720</x>
      <y>848</y>
      <w>488</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>folly::HHWheelTimerBase::Callback
--
- HHWheelTimerBase* wheel_{nullptr};
- std::chrono::steady_clock::time_point expiration_{};
- int bucket_{-1};
--
+ virtual void callbackCanceled() noexcept;
+ void cancelTimeout();
+ bool isScheduled() const; 
+ Duration getTimeRemaining() const;
- void setScheduled(HHWheelTimerBase* wheel,std::chrono::steady_clock::time_point deadline);
- void cancelTimeoutImpl()
bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>680</x>
      <y>1064</y>
      <w>152</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>wangle::ManagedConnection
--
--
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>776</x>
      <y>992</y>
      <w>168</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>190.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1216</x>
      <y>1224</y>
      <w>288</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>proxygen::HTTPSessionBase
--
- controller_ : HTTPSessionController* 
- infoCallback_ptr_ : HTTPSessionBase::InfoCallback
--
+ getTransport() = 0;
+ getType() = 0;
+ getEventBase() = 0;
+ hasActiveTransactions() = 0;
+ addCodecFilter(Args&amp;&amp;...);
+ startNow() = 0;
+ sendPing() = 0</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>824</x>
      <y>1112</y>
      <w>448</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;540.0;140.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>160</x>
      <y>824</y>
      <w>248</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>wangle::ConnectionManager
--
- eventBase_
- connections_
- timeout_
--
+ addConenction(mgrConn&amp;, timeout)
+ removeConnection(conn&amp;)
+ dropAllConnection()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>400</x>
      <y>872</y>
      <w>296</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
ref</panel_attributes>
    <additional_attributes>350.0;280.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>720</y>
      <w>224</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>wangle::managedConnection::Callback
--
--
+ onActivated(conn&amp;)
+ onDeactivated(conn&amp;)
bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>216</x>
      <y>768</y>
      <w>56</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;50.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1568</x>
      <y>1424</y>
      <w>224</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>proxygen::HTTPSession
--
- sock_: AsyncTransportWrapper
--
+ startNow() override;
# scheduleWrite()
+ runLoopCallback() override;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2200</x>
      <y>1160</y>
      <w>272</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>proxygen::HTTPTransaction::Transport
--
--
+ virtual void pauseIngress(HTTPTransaction* txn) noexcept = 0;
+ virtual void resumeIngress(HTTPTransaction* txn) noexcept = 0;
+ virtual void transactionTimeout(HTTPTransaction* txn) noexcept = 0;
+ virtual void sendHeaders(HTTPTransaction* txn, const HTTPMessage&amp; headers, HTTPHeaderSize* size, bool eom) noexcept = 0;
+ virtual size_t sendBody(HTTPTransaction* txn, std::unique_ptr&lt;folly::IOBuf&gt;, bool eom, bool trackLastByteFlushed) noexcept = 0;
+ virtual size_t sendChunkHeader(HTTPTransaction* txn, size_t length) noexcept = 0;
+ virtual size_t sendChunkTerminator(HTTPTransaction* txn) noexcept = 0;
+ virtual size_t sendEOM(HTTPTransaction* txn, const HTTPHeaders* trailers) noexcept = 0;
+ virtual size_t sendAbort(HTTPTransaction* txn, ErrorCode statusCode) noexcept = 0;
+ virtual size_t sendPriority(HTTPTransaction* txn, const http2::PriorityUpdate&amp; pri) noexcept = 0;
+ virtual size_t sendWindowUpdate(HTTPTransaction* txn, uint32_t bytes) noexcept = 0;
+ virtual void notifyPendingEgress() noexcept = 0;
+ virtual void detach(HTTPTransaction* txn) noexcept = 0;
+ virtual void notifyIngressBodyProcessed(uint32_t bytes) noexcept = 0;
+ virtual void notifyEgressBodyBuffered(int64_t bytes) noexcept = 0;
+ virtual const folly::SocketAddress&amp; getLocalAddress() const noexcept = 0;
+ virtual const folly::SocketAddress&amp; getPeerAddress() const noexcept = 0;
+ virtual void describe(std::ostream&amp;) const = 0;
+ virtual const wangle::TransportInfo&amp; getSetupTransportInfo() const noexcept = 0;
+ virtual bool getCurrentTransportInfo(wangle::TransportInfo* tinfo) = 0;
+ virtual const HTTPCodec&amp; getCodec() const noexcept = 0;
+ virtual void drain() = 0;
+ virtual bool isDraining() const = 0;
+ virtual HTTPTransaction* newPushedTransaction(HTTPCodec::StreamID assocStreamId, HTTPTransaction::PushHandler* handler) noexcept = 0;
+ virtual HTTPTransaction* newExTransaction(HTTPTransaction::Handler* handler, HTTPCodec::StreamID controlStream, bool unidirectional) noexcept = 0;
+ virtual std::string getSecurityProtocol() const = 0;
+ virtual void addWaitingForReplaySafety(folly::AsyncTransport::ReplaySafetyCallback* callback) noexcept = 0;
+ virtual void removeWaitingForReplaySafety(folly::AsyncTransport::ReplaySafetyCallback* callback) noexcept = 0;
+ virtual bool needToBlockForReplaySafety() const = 0;
+ virtual const folly::AsyncTransportWrapper* getUnderlyingTransport() const noexcept = 0;
+ virtual bool isReplaySafe() const = 0;
+ virtual void setHTTP2PrioritiesEnabled(bool enabled) = 0;
+ virtual bool getHTTP2PrioritiesEnabled() const = 0;
+ virtual folly::Optional&lt;const HTTPMessage::HTTPPriority&gt; getHTTPPriority(uint8_t level) = 0;
+ virtual folly::Expected&lt;folly::Unit, ErrorCode&gt; peek(PeekCallback /* peekCallback */)

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1496</x>
      <y>1344</y>
      <w>88</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;90.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1784</x>
      <y>1288</y>
      <w>432</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>520.0;10.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1528</x>
      <y>1552</y>
      <w>224</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>proxygen::HTTPDownStreamSession
--
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1624</x>
      <y>1520</y>
      <w>72</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>70.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1552</x>
      <y>1160</y>
      <w>224</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>EventBase::Callback
--
--
+ RunLoopCallback() = 0
bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1664</x>
      <y>1256</y>
      <w>80</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
private</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;210.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>856</x>
      <y>1304</y>
      <w>304</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>proxygen::HTTPSessionController
--
--
+ getRequestHandler(transaction&amp;, message) = 0;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>968</x>
      <y>1240</y>
      <w>264</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
ref</panel_attributes>
    <additional_attributes>310.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>752</x>
      <y>1416</y>
      <w>224</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>proxygen::HTTPUpstreamSessionController
--
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1024</x>
      <y>1416</y>
      <w>224</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>proxygen::SimpleController
--
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>848</x>
      <y>1336</y>
      <w>120</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>130.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>992</x>
      <y>1336</y>
      <w>160</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;180.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>400</x>
      <y>360</y>
      <w>112</w>
      <h>480</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
ref</panel_attributes>
    <additional_attributes>120.0;10.0;10.0;580.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>288</x>
      <y>136</y>
      <w>32</w>
      <h>704</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
ref</panel_attributes>
    <additional_attributes>10.0;860.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1096</x>
      <y>576</y>
      <w>360</w>
      <h>664</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
ref</panel_attributes>
    <additional_attributes>430.0;810.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1872</x>
      <y>496</y>
      <w>192</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>proxygen::HTTPCodec
--
--
+ oningress(const buf&amp;) = 0</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1768</x>
      <y>656</y>
      <w>192</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>proxygen::HTTP1xCodec
--
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1864</x>
      <y>552</y>
      <w>120</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>130.0;10.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2032</x>
      <y>656</y>
      <w>192</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>proxygen::HQFramedCodec
--
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2048</x>
      <y>552</y>
      <w>104</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1896</x>
      <y>824</y>
      <w>192</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>proxygen::HTTPCodec::Callback
--
--
onMessageBegin() = 0
onBody() = 0</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2480</x>
      <y>976</y>
      <w>192</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>proxygen::HQFramedCodecCallback
--
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2200</x>
      <y>960</y>
      <w>192</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>proxygen::HTTP1xCodecCallback
--
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2016</x>
      <y>880</y>
      <w>344</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;410.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2056</x>
      <y>880</y>
      <w>520</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;630.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1760</x>
      <y>880</y>
      <w>192</w>
      <h>560</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
private</panel_attributes>
    <additional_attributes>220.0;10.0;10.0;680.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1888</x>
      <y>1192</y>
      <w>224</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>folly::AsyncTransportWrapper::ReadCallback
--
--
+ void readDataAvailable(size_t len) = 0;
+ bool isBufferMovable()
+ void readEof() = 0
+ void readErr() = 0
+ setReadCB(ReadCallback*) = 0
+ getReadCallback() const = 0
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1776</x>
      <y>1288</y>
      <w>208</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>240.0;10.0;10.0;170.0</additional_attributes>
  </element>
</diagram>
